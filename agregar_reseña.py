# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\mayra\OneDrive\Escritorio\Facu\5to Semestre\Visualizacion\agregar_reseña.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import mysql.connector as mysql
from mysql.connector.errors import Error
from Eliminar_actualizar_reseña import Ui_MainWindow as eliminar_actualizar_reseña


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(665, 519)
        MainWindow.setStyleSheet("background-color:rgb(85, 0, 255);\n"
"color:rgb(97, 97, 244);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.nombre_pelicula_serie = QtWidgets.QLabel(self.centralwidget)
        self.nombre_pelicula_serie.setGeometry(QtCore.QRect(140, 200, 47, 13))
        self.nombre_pelicula_serie.setStyleSheet("color: rgb(255, 255, 255);")
        self.nombre_pelicula_serie.setObjectName("nombre_pelicula_serie")
        self.calificacion = QtWidgets.QLabel(self.centralwidget)
        self.calificacion.setGeometry(QtCore.QRect(110, 240, 81, 21))
        self.calificacion.setStyleSheet("color: rgb(255, 255, 255);")
        self.calificacion.setObjectName("calificacion")
        self.comentario = QtWidgets.QLabel(self.centralwidget)
        self.comentario.setGeometry(QtCore.QRect(110, 290, 81, 21))
        self.comentario.setStyleSheet("color: rgb(255, 255, 255);")
        self.comentario.setObjectName("comentario")
        self.texto_nombre_pelicula = QtWidgets.QLineEdit(self.centralwidget)
        self.texto_nombre_pelicula.setGeometry(QtCore.QRect(200, 190, 231, 31))
        self.texto_nombre_pelicula.setStyleSheet("border-radius:5px;\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(255, 255, 255);")
        self.texto_nombre_pelicula.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.texto_nombre_pelicula.setObjectName("texto_nombre_pelicula")
        self.texto_calificacion = QtWidgets.QLineEdit(self.centralwidget)
        self.texto_calificacion.setGeometry(QtCore.QRect(200, 240, 231, 31))
        self.texto_calificacion.setStyleSheet("border-radius:5px;\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(255, 255, 255);")
        self.texto_calificacion.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.texto_calificacion.setObjectName("texto_calificacion")
        self.texto_comentario = QtWidgets.QLineEdit(self.centralwidget)
        self.texto_comentario.setGeometry(QtCore.QRect(200, 290, 371, 101))
        self.texto_comentario.setStyleSheet("border-radius:5px;\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(255, 255, 255);")
        self.texto_comentario.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.texto_comentario.setObjectName("texto_comentario")
        self.boton_agregar_resena = QtWidgets.QPushButton(self.centralwidget)
        self.boton_agregar_resena.setGeometry(QtCore.QRect(100, 430, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.boton_agregar_resena.setFont(font)
        self.boton_agregar_resena.setStyleSheet("QPushButton{\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(111, 118, 255);\n"
"border-radius: 10px;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"color: rgb(255, 255, 0);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"background-color:rgb(121, 139, 255);\n"
"}")
        self.boton_agregar_resena.setObjectName("boton_agregar_resena")
        self.netflix = QtWidgets.QLabel(self.centralwidget)
        self.netflix.setGeometry(QtCore.QRect(140, 20, 311, 91))
        self.netflix.setStyleSheet("")
        self.netflix.setObjectName("netflix")
        self.salir_resena = QtWidgets.QPushButton(self.centralwidget)
        self.salir_resena.setGeometry(QtCore.QRect(470, 430, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.salir_resena.setFont(font)
        self.salir_resena.setStyleSheet("QPushButton{\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(111, 118, 255);\n"
"border-radius: 10px;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"color: rgb(255, 255, 0);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"background-color:rgb(121, 139, 255);\n"
"}")
        self.salir_resena.setObjectName("salir_resena")
        self.titulo_agregar_resena = QtWidgets.QLabel(self.centralwidget)
        self.titulo_agregar_resena.setGeometry(QtCore.QRect(240, 140, 171, 31))
        self.titulo_agregar_resena.setObjectName("titulo_agregar_resena")
        self.Actualizar_resena = QtWidgets.QPushButton(self.centralwidget)
        self.Actualizar_resena.setGeometry(QtCore.QRect(260, 430, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.Actualizar_resena.setFont(font)
        self.Actualizar_resena.setStyleSheet("QPushButton{\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(111, 118, 255);\n"
"border-radius: 10px;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"color: rgb(255, 255, 0);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"background-color:rgb(121, 139, 255);\n"
"}")
        self.Actualizar_resena.setObjectName("Actualizar_resena")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.salir_resena.clicked.connect(self.salir_resena_clicked)
        self.Actualizar_resena.clicked.connect(self.Actualizar_resena_clicked)
        self.boton_agregar_resena.clicked.connect(self.boton_agregar_resena_clicked)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.nombre_pelicula_serie.setText(_translate("MainWindow", "NOMBRE"))
        self.calificacion.setText(_translate("MainWindow", "CALIFICACION"))
        self.comentario.setText(_translate("MainWindow", "COMENTARIO"))
        self.boton_agregar_resena.setText(_translate("MainWindow", "Agregar"))
        self.netflix.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:48pt; font-weight:600; color:#ffffff;\">HBO</span></p></body></html>"))
        self.salir_resena.setText(_translate("MainWindow", "Salir"))
        self.titulo_agregar_resena.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:12pt; font-weight:600; color:#ffffff;\">Agregar reseña</span></p><p><br/></p></body></html>"))
        self.Actualizar_resena.setText(_translate("MainWindow", "Actualizar/Eliminar"))

    def salir_resena_clicked(self):
        # Función para cerrar la ventana principal y salir de la aplicación
        MainWindow.close()
        
    def boton_agregar_resena_clicked(self):
        nombre_pelicula = self.texto_nombre_pelicula.text()
        calificacion = self.texto_calificacion.text()
        comentario = self.texto_comentario.text()

        if nombre_pelicula and calificacion and comentario:
            # Insertar datos en la tabla reseña
            result = self.insertar_resena(nombre_pelicula, calificacion, comentario)

            if result:
                QtWidgets.QMessageBox.information(MainWindow, "Éxito", "Reseña agregada correctamente.")
            else:
                QtWidgets.QMessageBox.warning(MainWindow, "Error", "Error al agregar la reseña.")
        else:
            QtWidgets.QMessageBox.warning(MainWindow, "Campos Vacíos", "Por favor, complete todos los campos.")

    def insertar_resena(self, nombre_pelicula, calificacion, comentario):
        try:
            dbConn = mysql.connect(user="root", password="Pedraza26", host="localhost", database="mydb")
            dbCommand = dbConn.cursor()

            # Obtener el ID de la película en base al nombre ingresado
            sql_query = "SELECT id_Pelicula, Genero_id_Genero FROM pelicula WHERE nombre = %s"
            dbCommand.execute(sql_query, (nombre_pelicula,))
            result_pelicula = dbCommand.fetchone()

            if result_pelicula:
                id_Pelicula, Pelicula_Genero_id_Genero = result_pelicula

                # Insertar la reseña en la tabla reseña
                sql_insert = "INSERT INTO Reseña (Usuario_id_Usuario, nombre_pelicula, calificacion, comentario, Pelicula_id_Pelicula, Pelicula_Genero_id_Genero) VALUES (%s, %s, %s, %s, %s, %s)"
                values = (4, nombre_pelicula, calificacion, comentario, id_Pelicula, Pelicula_Genero_id_Genero)  # Aquí puedes usar valores reales para Usuario_id_Usuario y NombreUsuario
                dbCommand.execute(sql_insert, values)

                dbConn.commit()  # Confirmar la transacción
                return True
            else:
                return False

        except mysql.Error as e:
            print(e.msg)
            return False

        finally:
            dbCommand.close()
            dbConn.close()

    def Actualizar_resena_clicked(self):
        print("La función editar_resena_clicked se ha llamado")
        self.window = QtWidgets.QMainWindow()
        self.ui = eliminar_actualizar_reseña()
        self.ui.setupUi(self.window)
        self.window.show()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
