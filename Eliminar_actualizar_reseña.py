# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\mayra\OneDrive\Escritorio\Facu\5to Semestre\Visualizacion\Eliminar_actualizar_reseña.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import mysql.connector as mysql
from mysql.connector.errors import Error


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(921, 557)
        MainWindow.setStyleSheet("background-color:rgb(85, 0, 255);\n"
"color:rgb(97, 97, 244);\n"
"")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.netflix = QtWidgets.QLabel(self.centralwidget)
        self.netflix.setGeometry(QtCore.QRect(70, 10, 311, 91))
        self.netflix.setStyleSheet("background-color:rgb(85, 0, 255);\n"
"color:rgb(97, 97, 244);")
        self.netflix.setObjectName("netflix")
        self.titulo_eliminar = QtWidgets.QLabel(self.centralwidget)
        self.titulo_eliminar.setGeometry(QtCore.QRect(520, 40, 241, 31))
        self.titulo_eliminar.setObjectName("titulo_eliminar")
        self.nombre_en_catalogo = QtWidgets.QLabel(self.centralwidget)
        self.nombre_en_catalogo.setGeometry(QtCore.QRect(20, 130, 161, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.nombre_en_catalogo.setFont(font)
        self.nombre_en_catalogo.setObjectName("nombre_en_catalogo")
        self.actualizar = QtWidgets.QPushButton(self.centralwidget)
        self.actualizar.setGeometry(QtCore.QRect(490, 290, 171, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.actualizar.setFont(font)
        self.actualizar.setStyleSheet("QPushButton{\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(111, 118, 255);\n"
"border-radius: 10px;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"color: rgb(255, 255, 0);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"background-color:rgb(121, 139, 255);\n"
"}")
        self.actualizar.setObjectName("actualizar")
        self.eliminar = QtWidgets.QPushButton(self.centralwidget)
        self.eliminar.setGeometry(QtCore.QRect(690, 290, 171, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.eliminar.setFont(font)
        self.eliminar.setStyleSheet("QPushButton{\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(111, 118, 255);\n"
"border-radius: 10px;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"color: rgb(255, 255, 0);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"background-color:rgb(121, 139, 255);\n"
"}")
        self.eliminar.setObjectName("eliminar")
        self.salir_eliminar_resena = QtWidgets.QPushButton(self.centralwidget)
        self.salir_eliminar_resena.setGeometry(QtCore.QRect(40, 360, 71, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(12)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.salir_eliminar_resena.setFont(font)
        self.salir_eliminar_resena.setStyleSheet("QPushButton{\n"
"color: rgb(0, 0, 0);\n"
"background-color: rgb(111, 118, 255);\n"
"border-radius: 10px;\n"
"}\n"
"\n"
"QPushButton:hover{\n"
"color: rgb(255, 255, 0);\n"
"}\n"
"\n"
"QPushButton:pressed{\n"
"background-color:rgb(121, 139, 255);\n"
"}")
        self.salir_eliminar_resena.setObjectName("salir_eliminar_resena")
        self.comentario = QtWidgets.QLabel(self.centralwidget)
        self.comentario.setGeometry(QtCore.QRect(20, 180, 81, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.comentario.setFont(font)
        self.comentario.setObjectName("comentario")
        self.comentario_editado = QtWidgets.QLineEdit(self.centralwidget)
        self.comentario_editado.setGeometry(QtCore.QRect(490, 180, 371, 91))
        self.comentario_editado.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.comentario_editado.setObjectName("comentario_editado")
        self.confirmacion = QtWidgets.QLabel(self.centralwidget)
        self.confirmacion.setGeometry(QtCore.QRect(120, 320, 211, 16))
        self.confirmacion.setStyleSheet("font: 10pt \"Gill Sans MT\";color:white;")
        self.confirmacion.setText("")
        self.confirmacion.setObjectName("confirmacion")
        self.comentario_actual = QtWidgets.QLabel(self.centralwidget)
        self.comentario_actual.setGeometry(QtCore.QRect(120, 180, 251, 111))
        self.comentario_actual.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"")
        self.comentario_actual.setText("")
        self.comentario_actual.setObjectName("comentario_actual")
        self.comentario_2 = QtWidgets.QLabel(self.centralwidget)
        self.comentario_2.setGeometry(QtCore.QRect(490, 140, 181, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.comentario_2.setFont(font)
        self.comentario_2.setObjectName("comentario_2")
        self.nombre_en_catalogo_2 = QtWidgets.QLabel(self.centralwidget)
        self.nombre_en_catalogo_2.setGeometry(QtCore.QRect(190, 130, 181, 31))
        self.nombre_en_catalogo_2.setStyleSheet("background-color: rgb(255, 255, 255);\n"
"")
        self.nombre_en_catalogo_2.setText("")
        self.nombre_en_catalogo_2.setObjectName("nombre_en_catalogo_2")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 921, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        
        
        self.eliminar.clicked.connect(self.eliminar_clicked)
        self.actualizar.clicked.connect(self.actualizar_clicked)
        self.salir_eliminar_resena.clicked.connect(self.salir_eliminar_resena_clicked)
        self.mostrar_resena_seleccionada(3)
        
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.netflix.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:48pt; font-weight:600; color:#ffffff;\">HBO</span></p></body></html>"))
        self.titulo_eliminar.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:12pt; font-weight:600; color:#ffffff;\">Eliminar o actualizar reseña</span></p><p><br/></p></body></html>"))
        self.nombre_en_catalogo.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ffffff;\">Nombre en cátalogo</span><br/></p></body></html>"))
        self.actualizar.setText(_translate("MainWindow", "Actualizar"))
        self.eliminar.setText(_translate("MainWindow", "Eliminar"))
        self.salir_eliminar_resena.setText(_translate("MainWindow", "Salir"))
        self.comentario.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ffffff;\">Comentario</span></p><p><br/></p></body></html>"))
        self.comentario_2.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ffffff;\">Comentario nuevo:</span></p><p><br/></p></body></html>"))

    def salir_eliminar_resena_clicked(self):
        # Función para cerrar la ventana principal y salir de la aplicación
        QtWidgets.qApp.quit()

    def mostrar_resena_seleccionada(self, nombre_pelicula):
        try:
            dbConn = mysql.connect(user="root", password="Pedraza26", host="localhost", database="mydb")
            dbCommand = dbConn.cursor()

            # Obtener la reseña actual
            sql_query = "SELECT nombre_pelicula, comentario FROM reseña WHERE Pelicula_id_Pelicula = (SELECT id_Pelicula FROM pelicula WHERE id_Pelicula = %s )"
            dbCommand.execute(sql_query, (nombre_pelicula,))
            result_resena = dbCommand.fetchone()

            if result_resena:
                nombre_pelicula, comentario = result_resena
                self.nombre_en_catalogo_2.setText(nombre_pelicula)
                self.comentario_actual.setText(comentario)
                self.comentario_editado.setText(comentario)
                self.confirmacion.setText("")
            else:
                self.confirmacion.setText("Reseña no encontrada.")

        except mysql.Error as e:
            print(e.msg)
            self.confirmacion.setText("Error al obtener la reseña.")

        finally:
            dbCommand.close()
            dbConn.close()

    def eliminar_clicked(self):
        nombre_pelicula = self.nombre_en_catalogo_2.text()

        try:
            dbConn = mysql.connect(user="root", password="Pedraza26", host="localhost", database="mydb")
            dbCommand = dbConn.cursor()

            # Eliminar la reseña
            sql_delete = "DELETE FROM reseña WHERE Pelicula_id_Pelicula = (SELECT id_Pelicula FROM pelicula WHERE nombre_pelicula = %s LIMIT 1)"
            dbCommand.execute(sql_delete, (nombre_pelicula,))
            dbConn.commit()

            self.confirmacion.setText("Reseña eliminada correctamente.")
            self.comentario_actual.setText("")
            self.comentario_editado.setText("")

        except mysql.Error as e:
            print(e.msg)
            self.confirmacion.setText("Error al eliminar la reseña.")

        finally:
            dbCommand.close()
            dbConn.close()

    def actualizar_clicked(self):
        nombre_pelicula = self.nombre_en_catalogo_2.text()
        nuevo_comentario = self.comentario_editado.text()

        try:
            dbConn = mysql.connect(user="root", password="Pedraza26", host="localhost", database="mydb")
            dbCommand = dbConn.cursor()

            # Actualizar el comentario de la reseña
            sql_update = "UPDATE reseña SET comentario = %s WHERE Pelicula_id_Pelicula = (SELECT id_Pelicula FROM pelicula WHERE nombre_pelicula = %s LIMIT 1)"
            dbCommand.execute(sql_update, (nuevo_comentario, nombre_pelicula))
            dbConn.commit()

            self.confirmacion.setText("Reseña actualizada correctamente.")
            self.comentario_actual.setText(nuevo_comentario)

        except mysql.Error as e:
            print(e.msg)
            self.confirmacion.setText("Error al actualizar la reseña.")

        finally:
            dbCommand.close()
            dbConn.close()
            


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    ui.mostrar_resena_seleccionada(3)
    MainWindow.show()
    sys.exit(app.exec_())
    
